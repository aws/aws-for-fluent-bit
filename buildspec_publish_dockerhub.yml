version: 0.2         
phases:
  install:
    runtime-versions:
      golang: 1.12
  pre_build:
    commands:
      - echo Publish the image to DockerHub
  build:
    commands:
      # Pull the image that we built and pushed in the `Build` stage
      - aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com
      - docker pull ${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com/amazon/aws-for-fluent-bit-test:"amd64"
      - docker pull ${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com/amazon/aws-for-fluent-bit-test:"arm64"
      - docker tag ${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com/amazon/aws-for-fluent-bit-test:amd64 amazon/aws-for-fluent-bit:amd64
      - docker tag ${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com/amazon/aws-for-fluent-bit-test:arm64 amazon/aws-for-fluent-bit:arm64

      # List the docker images 
      - docker images

      # Push the image to dockerhub
      - 'DRY_RUN="false" ./scripts/publish.sh cicd-publish dockerhub'
      
      # Pull the image from dockerhub and verify
      - './scripts/publish.sh cicd-verify dockerhub'
artifacts:
  files:
    - '**/*'
